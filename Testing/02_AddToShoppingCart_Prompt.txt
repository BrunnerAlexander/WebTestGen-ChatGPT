Objective: Generate executable test code for the given abstract test flow.
Abstract Test Flow: Observe Screen Product Page, Observe Product Name $PRODUCT, Click Add To Cart, Navigate Shopping Cart, Observe $PRODUCT In Collection
Testing Environment: Selenium WebDriver with JUnit framework
Assumption: You can use the field WebDriver driver. The path to the application is "http://localhost:8000/index.html". Don't create the whole class with imports, only the specific Testcase method.
Requirement: Do not explain any of the code. Only output executable code that can be directly copied and executed in the mentioned testing environment.
Code:
index.html:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DemoShop</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="login-section">
        <h2>Login</h2>
        <input type="text" id="username" placeholder="Username">
        <input type="password" id="password" placeholder="Password">
        <button id="login-button" onclick="login()">Login</button>
        <p id="login-error" style="display:none;color:red;">Invalid username or password</p>
        <p>or <a href="#" onclick="showRegistration()">Register</a></p>
    </div>

    <div id="registration-section" style="display:none;">
        <h2>Register</h2>
        <input type="text" id="new-username" placeholder="Username">
        <input type="password" id="new-password" placeholder="Password">
        <input type="password" id="confirm-password" placeholder="Confirm Password">
        <button onclick="register()">Register</button>
        <p id="registration-error" style="display:none;color:red;">Error in registration</p>
    </div>

    <div id="product-section" style="display:none;">
        <button onclick="logout()" style="float:right;">Logout</button>
        <h2>Products</h2>
        <div>
            <p>Product 1 <button onclick="addToCart('Product 1')">Add to Cart</button></p>
            <p>Product 2 <button onclick="addToCart('Product 2')">Add to Cart</button></p>
            <p>Product 3 <button onclick="addToCart('Product 3')">Add to Cart</button></p>
        </div>
        <h3>Shopping Cart</h3>
        <ul id="cart"></ul>
    </div>

    <script src="script.js"></script>
</body>
</html>


script.js:
let registeredUsers = [{ username: "user", password: "pass" }];

function showRegistration() {
    document.getElementById("login-section").style.display = "none";
    document.getElementById("registration-section").style.display = "block";
}

function register() {
    const newUsername = document.getElementById("new-username").value;
    const newPassword = document.getElementById("new-password").value;
    const confirmPassword = document.getElementById("confirm-password").value;
    const registrationError = document.getElementById("registration-error");

    if (newPassword !== confirmPassword) {
        registrationError.textContent = "Passwords do not match.";
        registrationError.style.display = "block";
        return;
    }

    const userExists = registeredUsers.some(user => user.username === newUsername);
    if (userExists) {
        registrationError.textContent = "Username already taken.";
        registrationError.style.display = "block";
        return;
    }

    registeredUsers.push({ username: newUsername, password: newPassword });
    alert("Registration successful. Please login.");
    document.getElementById("registration-section").style.display = "none";
    document.getElementById("login-section").style.display = "block";
}

function login() {
    const username = document.getElementById("username").value;
    const password = document.getElementById("password").value;
    const loginError = document.getElementById("login-error");

    const isAuthenticated = registeredUsers.some(user => user.username === username && user.password === password);
    
    if (isAuthenticated) {
        document.getElementById("login-section").style.display = "none";
        document.getElementById("product-section").style.display = "block";
    } else {
        loginError.style.display = "block";
    }
}

function logout() {
    document.getElementById("product-section").style.display = "none";
    document.getElementById("login-section").style.display = "block";
    clearForm();
}

function clearForm() {
    document.getElementById("username").value = "";
    document.getElementById("password").value = "";
    document.getElementById("login-error").style.display = "none";
}

function addToCart(product) {
    const cart = document.getElementById("cart");
    const li = document.createElement("li");
    li.appendChild(document.createTextNode(product));
    cart.appendChild(li);
}

